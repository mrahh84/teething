# Generated by Django 5.2.1 on 2025-07-31 18:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0013_department_systemperformance_analyticscache_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of analytics data')),
                ('current_occupancy', models.IntegerField(default=0, help_text='Current number of employees at location')),
                ('peak_occupancy', models.IntegerField(default=0, help_text='Peak occupancy during the day')),
                ('average_occupancy', models.DecimalField(decimal_places=2, default=0, help_text='Average occupancy throughout the day', max_digits=5)),
                ('utilization_rate', models.DecimalField(decimal_places=2, default=0, help_text='Utilization rate as percentage', max_digits=5)),
                ('total_movements', models.IntegerField(default=0, help_text='Total movements in/out of location')),
                ('arrivals', models.IntegerField(default=0, help_text='Number of arrivals')),
                ('departures', models.IntegerField(default=0, help_text='Number of departures')),
                ('active_tasks', models.IntegerField(default=0, help_text='Number of active tasks')),
                ('completed_tasks', models.IntegerField(default=0, help_text='Number of completed tasks')),
                ('average_stay_duration', models.DecimalField(decimal_places=2, default=0, help_text='Average duration employees stay at location (minutes)', max_digits=6)),
                ('peak_hours', models.JSONField(default=dict, help_text='Peak usage hours and occupancy')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the movement occurred')),
                ('movement_type', models.CharField(choices=[('TASK_ASSIGNMENT', 'Task Assignment'), ('BREAK', 'Break Time'), ('LUNCH', 'Lunch Break'), ('MEETING', 'Meeting'), ('SECURITY_CHECK', 'Security Check'), ('CLOCK_IN', 'Clock In'), ('CLOCK_OUT', 'Clock Out')], default='TASK_ASSIGNMENT', help_text='Type of movement', max_length=20)),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Duration at previous location in minutes', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the movement')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(help_text='Type of task (e.g., Goobi, OCR4All, Transkribus)', max_length=100)),
                ('assigned_date', models.DateField(help_text='Date of assignment')),
                ('start_time', models.TimeField(blank=True, help_text='Scheduled start time', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Scheduled end time', null=True)),
                ('is_completed', models.BooleanField(default=False, help_text='Whether the task is completed')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the assignment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-assigned_date', 'employee__surname', 'employee__given_name'],
            },
        ),
        migrations.AlterModelOptions(
            name='location',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='location',
            name='capacity',
            field=models.IntegerField(default=0, help_text='Maximum number of employees that can be at this location'),
        ),
        migrations.AddField(
            model_name='location',
            name='description',
            field=models.TextField(blank=True, help_text='Additional description of the location'),
        ),
        migrations.AddField(
            model_name='location',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this location is currently active'),
        ),
        migrations.AddField(
            model_name='location',
            name='location_type',
            field=models.CharField(choices=[('SECURITY', 'Security Checkpoint'), ('WORKSTATION', 'Workstation Area'), ('LUNCH', 'Lunch Area'), ('MEETING', 'Meeting Room'), ('STORAGE', 'Storage Area'), ('TASK', 'Task Assignment Area'), ('ROOM', 'Physical Room')], default='WORKSTATION', help_text='Type of location', max_length=20),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['location_type', 'is_active'], name='common_loca_locatio_de2c50_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['is_active', 'name'], name='common_loca_is_acti_d3c38a_idx'),
        ),
        migrations.AddField(
            model_name='locationanalytics',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='common.location'),
        ),
        migrations.AddField(
            model_name='locationmovement',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='locationmovement',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_movements', to='common.employee'),
        ),
        migrations.AddField(
            model_name='locationmovement',
            name='from_location',
            field=models.ForeignKey(blank=True, help_text='Location employee moved from (null for initial entry)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departures', to='common.location'),
        ),
        migrations.AddField(
            model_name='locationmovement',
            name='to_location',
            field=models.ForeignKey(help_text='Location employee moved to', on_delete=django.db.models.deletion.CASCADE, related_name='arrivals', to='common.location'),
        ),
        migrations.AddField(
            model_name='taskassignment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='taskassignment',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to='common.employee'),
        ),
        migrations.AddField(
            model_name='taskassignment',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to='common.location'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['location', 'date'], name='common_loca_locatio_9af45a_idx'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['date', 'utilization_rate'], name='common_loca_date_b3e6d1_idx'),
        ),
        migrations.AddIndex(
            model_name='locationanalytics',
            index=models.Index(fields=['location', 'utilization_rate'], name='common_loca_locatio_c4843d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='locationanalytics',
            unique_together={('location', 'date')},
        ),
        migrations.AddIndex(
            model_name='locationmovement',
            index=models.Index(fields=['employee', 'timestamp'], name='common_loca_employe_8cbc6e_idx'),
        ),
        migrations.AddIndex(
            model_name='locationmovement',
            index=models.Index(fields=['from_location', 'timestamp'], name='common_loca_from_lo_b181e2_idx'),
        ),
        migrations.AddIndex(
            model_name='locationmovement',
            index=models.Index(fields=['to_location', 'timestamp'], name='common_loca_to_loca_1a141c_idx'),
        ),
        migrations.AddIndex(
            model_name='locationmovement',
            index=models.Index(fields=['movement_type', 'timestamp'], name='common_loca_movemen_a820ab_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['employee', 'assigned_date'], name='common_task_employe_ab4c30_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['location', 'assigned_date'], name='common_task_locatio_d8f675_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['task_type', 'assigned_date'], name='common_task_task_ty_473af5_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['is_completed', 'assigned_date'], name='common_task_is_comp_23bdd1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='taskassignment',
            unique_together={('employee', 'location', 'assigned_date')},
        ),
    ]
