# Generated by Django 4.2.1 on 2025-07-30 19:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0012_assign_default_roles'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Department name', max_length=255, unique=True)),
                ('code', models.CharField(help_text='Short department code', max_length=10, unique=True)),
                ('description', models.TextField(blank=True, help_text='Department description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this department is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of performance data')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When this record was created')),
                ('total_events_processed', models.IntegerField(default=0, help_text='Total events processed today')),
                ('active_users', models.IntegerField(default=0, help_text='Number of active users today')),
                ('api_requests', models.IntegerField(default=0, help_text='Number of API requests today')),
                ('average_response_time', models.DecimalField(decimal_places=3, default=0, help_text='Average API response time in seconds', max_digits=6)),
                ('database_queries', models.IntegerField(default=0, help_text='Number of database queries today')),
                ('slow_queries', models.IntegerField(default=0, help_text='Number of slow queries (>1s)')),
                ('cache_hit_rate', models.DecimalField(decimal_places=2, default=0, help_text='Cache hit rate percentage', max_digits=5)),
                ('cache_misses', models.IntegerField(default=0, help_text='Number of cache misses')),
            ],
            options={
                'indexes': [models.Index(fields=['date'], name='common_syst_date_a021cb_idx'), models.Index(fields=['timestamp'], name='common_syst_timesta_bc9c2a_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_key', models.CharField(help_text='Unique identifier for cached data', max_length=255, unique=True)),
                ('data', models.JSONField(help_text='Cached analytics data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(help_text='When this cache entry expires')),
                ('cache_type', models.CharField(choices=[('daily_summary', 'Daily Summary'), ('employee_analytics', 'Employee Analytics'), ('department_analytics', 'Department Analytics'), ('attendance_heatmap', 'Attendance Heatmap'), ('movement_patterns', 'Movement Patterns'), ('anomaly_detection', 'Anomaly Detection')], help_text='Type of cached analytics data', max_length=50)),
            ],
            options={
                'indexes': [models.Index(fields=['cache_type', 'expires_at'], name='common_anal_cache_t_96b09d_idx'), models.Index(fields=['cache_key'], name='common_anal_cache_k_8b6efa_idx')],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='department',
            field=models.ForeignKey(blank=True, help_text="Employee's department", null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.department'),
        ),
        migrations.CreateModel(
            name='ReportConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily_dashboard', 'Daily Dashboard'), ('employee_history', 'Employee History'), ('period_summary', 'Period Summary'), ('comprehensive_attendance', 'Comprehensive Attendance'), ('real_time_analytics', 'Real-Time Analytics'), ('department_performance', 'Department Performance'), ('compliance_audit', 'Compliance & Audit')], help_text='Type of report', max_length=50)),
                ('configuration', models.JSONField(default=dict, help_text='User-specific configuration for this report type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_configurations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'report_type'], name='common_repo_user_id_f89d72_idx')],
                'unique_together': {('user', 'report_type')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of analytics data')),
                ('total_events', models.IntegerField(default=0, help_text='Total events for the day')),
                ('clock_in_count', models.IntegerField(default=0, help_text='Number of clock-in events')),
                ('clock_out_count', models.IntegerField(default=0, help_text='Number of clock-out events')),
                ('total_hours_worked', models.DecimalField(decimal_places=2, default=0, help_text='Total hours worked', max_digits=5)),
                ('average_arrival_time', models.TimeField(blank=True, help_text='Average arrival time', null=True)),
                ('average_departure_time', models.TimeField(blank=True, help_text='Average departure time', null=True)),
                ('locations_visited', models.JSONField(default=list, help_text='List of locations visited')),
                ('movement_count', models.IntegerField(default=0, help_text='Number of location movements')),
                ('is_late_arrival', models.BooleanField(default=False, help_text='Was arrival late?')),
                ('is_early_departure', models.BooleanField(default=False, help_text='Was departure early?')),
                ('attendance_score', models.DecimalField(decimal_places=2, default=0, help_text='Attendance performance score (0-100)', max_digits=5)),
                ('is_anomaly', models.BooleanField(default=False, help_text='Flagged as anomalous behavior')),
                ('anomaly_reason', models.TextField(blank=True, help_text='Reason for anomaly flag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='common.employee')),
            ],
            options={
                'indexes': [models.Index(fields=['employee', 'date'], name='common_empl_employe_6bfdac_idx'), models.Index(fields=['date', 'is_anomaly'], name='common_empl_date_b04c27_idx'), models.Index(fields=['employee', 'is_late_arrival'], name='common_empl_employe_31a54c_idx')],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DepartmentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of analytics data')),
                ('total_employees', models.IntegerField(default=0, help_text='Total employees in department')),
                ('present_employees', models.IntegerField(default=0, help_text='Employees present today')),
                ('absent_employees', models.IntegerField(default=0, help_text='Employees absent today')),
                ('late_employees', models.IntegerField(default=0, help_text='Employees who arrived late')),
                ('average_attendance_rate', models.DecimalField(decimal_places=2, default=0, help_text='Average attendance rate percentage', max_digits=5)),
                ('average_hours_worked', models.DecimalField(decimal_places=2, default=0, help_text='Average hours worked per employee', max_digits=5)),
                ('total_hours_worked', models.DecimalField(decimal_places=2, default=0, help_text='Total hours worked by department', max_digits=8)),
                ('location_utilization', models.JSONField(default=dict, help_text='Location utilization data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='common.department')),
            ],
            options={
                'indexes': [models.Index(fields=['department', 'date'], name='common_depa_departm_fcfc53_idx'), models.Index(fields=['date', 'average_attendance_rate'], name='common_depa_date_017acc_idx')],
                'unique_together': {('department', 'date')},
            },
        ),
    ]
